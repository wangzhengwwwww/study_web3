{
	"id": "3c3981bb81f7aab6ce233ad42ecdc72b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"如何使用Solidity/Loop.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ncontract Loop {\r\n    function loop() pure public returns(uint) {\r\n        // for loop\r\n        for (uint256 i = 0; i < 10; i++) {\r\n            if (i == 3) {\r\n                // Skip to next iteration with continue\r\n                continue;\r\n            }\r\n            if (i == 5) {\r\n                // Exit loop with break\r\n                break;\r\n            }\r\n        }\r\n\r\n        // while loop\r\n        uint256 j;\r\n        while (j < 10) {\r\n            j++;\r\n        }\r\n        return j;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"如何使用Solidity/Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "loop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":61:563  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":61:563  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa92100cb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":82:560  function loop() pure public returns(uint) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":118:122  uint */\n      0x00\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":161:170  uint256 i */\n      dup1\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":173:174  0 */\n      0x00\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":161:174  uint256 i = 0 */\n      swap1\n      pop\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":156:434  for (uint256 i = 0; i < 10; i++) {... */\n    tag_9:\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":180:182  10 */\n      0x0a\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":176:177  i */\n      dup2\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":176:182  i < 10 */\n      lt\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":156:434  for (uint256 i = 0; i < 10; i++) {... */\n      iszero\n      tag_10\n      jumpi\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":213:214  3 */\n      0x03\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":208:209  i */\n      dup2\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":208:214  i == 3 */\n      sub\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":204:316  if (i == 3) {... */\n      iszero\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":292:300  continue */\n      tag_11\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":204:316  if (i == 3) {... */\n      jumpi\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":339:340  5 */\n      0x05\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":334:335  i */\n      dup2\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":334:340  i == 5 */\n      sub\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":330:423  if (i == 5) {... */\n      iszero\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":402:407  break */\n      tag_10\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":330:423  if (i == 5) {... */\n      jumpi\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":156:434  for (uint256 i = 0; i < 10; i++) {... */\n    tag_11:\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":184:187  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":156:434  for (uint256 i = 0; i < 10; i++) {... */\n      jump(tag_9)\n    tag_10:\n      pop\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":469:478  uint256 j */\n      0x00\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":489:534  while (j < 10) {... */\n    tag_14:\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":500:502  10 */\n      0x0a\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":496:497  j */\n      dup2\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":496:502  j < 10 */\n      lt\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":489:534  while (j < 10) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":519:522  j++ */\n      dup1\n      dup1\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      swap2\n      pop\n      pop\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":489:534  while (j < 10) {... */\n      jump(tag_14)\n    tag_15:\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":551:552  j */\n      dup1\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":544:552  return j */\n      swap2\n      pop\n      pop\n        /* \"\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe4\\xbd\\xbf\\xe7\\x94\\xa8Solidity/Loop.sol\":82:560  function loop() pure public returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_18:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_19:\n        /* \"#utility.yul\":177:201   */\n      tag_24\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_18\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_7:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_26\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_19\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_20:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x11\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:861   */\n    tag_17:\n        /* \"#utility.yul\":667:670   */\n      0x00\n        /* \"#utility.yul\":690:714   */\n      tag_29\n        /* \"#utility.yul\":708:713   */\n      dup3\n        /* \"#utility.yul\":690:714   */\n      tag_18\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":681:714   */\n      swap2\n      pop\n        /* \"#utility.yul\":736:802   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":729:734   */\n      dup3\n        /* \"#utility.yul\":726:803   */\n      sub\n        /* \"#utility.yul\":723:826   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":806:824   */\n      tag_31\n      tag_20\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":723:826   */\n    tag_30:\n        /* \"#utility.yul\":853:854   */\n      0x01\n        /* \"#utility.yul\":846:851   */\n      dup3\n        /* \"#utility.yul\":842:855   */\n      add\n        /* \"#utility.yul\":835:855   */\n      swap1\n      pop\n        /* \"#utility.yul\":628:861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220418f356e5847ab738d67edd2dd29eb58b33f8b60065a918affc886ac8aaf204464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061017b8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063a92100cb1461002d575b5f80fd5b61003561004b565b60405161004291906100b8565b60405180910390f35b5f805f90505b600a81101561007a57600381031561006d57600581031561007a575b8080600101915050610051565b505f5b600a811015610099578080610091906100fe565b91505061007d565b8091505090565b5f819050919050565b6100b2816100a0565b82525050565b5f6020820190506100cb5f8301846100a9565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610108826100a0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361013a576101396100d1565b5b60018201905091905056fea2646970667358221220418f356e5847ab738d67edd2dd29eb58b33f8b60065a918affc886ac8aaf204464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x7A JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x6D JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x7A JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x51 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x99 JUMPI DUP1 DUP1 PUSH2 0x91 SWAP1 PUSH2 0xFE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0xA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB PUSH0 DUP4 ADD DUP5 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x108 DUP3 PUSH2 0xA0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x13A JUMPI PUSH2 0x139 PUSH2 0xD1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE DUP16 CALLDATALOAD PUSH15 0x5847AB738D67EDD2DD29EB58B33F8B PUSH1 0x6 GAS SWAP2 DUP11 SELFDESTRUCT 0xC8 DUP7 0xAC DUP11 0xAF KECCAK256 PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "61:502:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loop_44": {
									"entryPoint": 75,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:864:1",
										"nodeType": "YulBlock",
										"src": "0:864:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "671:190:1",
													"nodeType": "YulBlock",
													"src": "671:190:1",
													"statements": [
														{
															"nativeSrc": "681:33:1",
															"nodeType": "YulAssignment",
															"src": "681:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "708:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "708:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "690:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:17:1"
																},
																"nativeSrc": "690:24:1",
																"nodeType": "YulFunctionCall",
																"src": "690:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "681:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "681:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "804:22:1",
																"nodeType": "YulBlock",
																"src": "804:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "806:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "806:16:1"
																			},
																			"nativeSrc": "806:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "806:18:1"
																		},
																		"nativeSrc": "806:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "806:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:66:1",
																		"nodeType": "YulLiteral",
																		"src": "736:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "726:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:2:1"
																},
																"nativeSrc": "726:77:1",
																"nodeType": "YulFunctionCall",
																"src": "726:77:1"
															},
															"nativeSrc": "723:103:1",
															"nodeType": "YulIf",
															"src": "723:103:1"
														},
														{
															"nativeSrc": "835:20:1",
															"nodeType": "YulAssignment",
															"src": "835:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "846:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "846:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:1:1",
																		"nodeType": "YulLiteral",
																		"src": "853:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "842:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																},
																"nativeSrc": "842:13:1",
																"nodeType": "YulFunctionCall",
																"src": "842:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "628:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "657:5:1",
														"nodeType": "YulTypedName",
														"src": "657:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "667:3:1",
														"nodeType": "YulTypedName",
														"src": "667:3:1",
														"type": ""
													}
												],
												"src": "628:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063a92100cb1461002d575b5f80fd5b61003561004b565b60405161004291906100b8565b60405180910390f35b5f805f90505b600a81101561007a57600381031561006d57600581031561007a575b8080600101915050610051565b505f5b600a811015610099578080610091906100fe565b91505061007d565b8091505090565b5f819050919050565b6100b2816100a0565b82525050565b5f6020820190506100cb5f8301846100a9565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610108826100a0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361013a576101396100d1565b5b60018201905091905056fea2646970667358221220418f356e5847ab738d67edd2dd29eb58b33f8b60065a918affc886ac8aaf204464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x7A JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x6D JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x7A JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x51 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x99 JUMPI DUP1 DUP1 PUSH2 0x91 SWAP1 PUSH2 0xFE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0xA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB PUSH0 DUP4 ADD DUP5 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x108 DUP3 PUSH2 0xA0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x13A JUMPI PUSH2 0x139 PUSH2 0xD1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE DUP16 CALLDATALOAD PUSH15 0x5847AB738D67EDD2DD29EB58B33F8B PUSH1 0x6 GAS SWAP2 DUP11 SELFDESTRUCT 0xC8 DUP7 0xAC DUP11 0xAF KECCAK256 PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "61:502:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;82:478;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;118:4;161:9;173:1;161:13;;156:278;180:2;176:1;:6;156:278;;;213:1;208;:6;204:112;292:8;204:112;339:1;334;:6;330:93;402:5;330:93;156:278;184:3;;;;;;;156:278;;;;469:9;489:45;500:2;496:1;:6;489:45;;;519:3;;;;;:::i;:::-;;;;489:45;;;551:1;544:8;;;82:478;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:233;667:3;690:24;708:5;690:24;:::i;:::-;681:33;;736:66;729:5;726:77;723:103;;806:18;;:::i;:::-;723:103;853:1;846:5;842:13;835:20;;628:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "75800",
								"executionCost": "121",
								"totalCost": "75921"
							},
							"external": {
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 563,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220418f356e5847ab738d67edd2dd29eb58b33f8b60065a918affc886ac8aaf204464736f6c634300081a0033",
									".code": [
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 118,
											"end": 122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 156,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 176,
											"end": 182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 156,
											"end": 434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 213,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 204,
											"end": 316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 292,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 204,
											"end": 316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 330,
											"end": 423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 330,
											"end": 423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 156,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 156,
											"end": 434,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 156,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 489,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 502,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 489,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 489,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 489,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 519,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 519,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 519,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 489,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 489,
											"end": 534,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 489,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 489,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 681,
											"end": 714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 681,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 723,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 723,
											"end": 826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 806,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 723,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 846,
											"end": 851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"如何使用Solidity/Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5982\\u4f55\\u4f7f\\u7528Solidity/Loop.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5982\\u4f55\\u4f7f\\u7528Solidity/Loop.sol\":{\"keccak256\":\"0xec0c58f99e2b3f83c531e598b80a684e6fb31bd8844b13240f3f567f4eefb86f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6c246d4d9692ae8fd89553befdf1b11b1ff0e7ef48f97c7c1bf19172f7069b\",\"dweb:/ipfs/QmfW2tuTcDiMtaFPyzyGvsZ7W3mkedo8Kzf1oUueNpnJ5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"如何使用Solidity/Loop.sol": {
				"ast": {
					"absolutePath": "如何使用Solidity/Loop.sol",
					"exportedSymbols": {
						"Loop": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "Loop",
							"nameLocation": "70:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "124:436:0",
										"statements": [
											{
												"body": {
													"id": 28,
													"nodeType": "Block",
													"src": "189:245:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 16,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "208:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "213:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "208:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 21,
															"nodeType": "IfStatement",
															"src": "204:112:0",
															"trueBody": {
																"id": 20,
																"nodeType": "Block",
																"src": "216:100:0",
																"statements": [
																	{
																		"id": 19,
																		"nodeType": "Continue",
																		"src": "292:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 22,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "339:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "334:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 27,
															"nodeType": "IfStatement",
															"src": "330:93:0",
															"trueBody": {
																"id": 26,
																"nodeType": "Block",
																"src": "342:81:0",
																"statements": [
																	{
																		"id": 25,
																		"nodeType": "Break",
																		"src": "402:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "180:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 29,
												"initializationExpression": {
													"assignments": [
														7
													],
													"declarations": [
														{
															"constant": false,
															"id": 7,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "169:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 29,
															"src": "161:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 6,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "161:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 9,
													"initialValue": {
														"hexValue": "30",
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "161:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "184:3:0",
														"subExpression": {
															"id": 13,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"nodeType": "ExpressionStatement",
													"src": "184:3:0"
												},
												"nodeType": "ForStatement",
												"src": "156:278:0"
											},
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "477:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "469:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 30,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"nodeType": "VariableDeclarationStatement",
												"src": "469:9:0"
											},
											{
												"body": {
													"id": 39,
													"nodeType": "Block",
													"src": "504:30:0",
													"statements": [
														{
															"expression": {
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "519:3:0",
																"subExpression": {
																	"id": 36,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "519:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "519:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 33,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "500:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"nodeType": "WhileStatement",
												"src": "489:45:0"
											},
											{
												"expression": {
													"id": 41,
													"name": "j",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "551:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 42,
												"nodeType": "Return",
												"src": "544:8:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "91:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "95:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "118:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:6:0"
									},
									"scope": 45,
									"src": "82:478:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 46,
							"src": "61:502:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:530:0"
				},
				"id": 0
			}
		}
	}
}